<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMutant2Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprMutant2Idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>race2 = GenCont.race2

scrSkills()
scrWeapons()

var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt; gp_num; i++;)
   {
   if gamepad_is_connected(i) global.gp[i] = true else global.gp[i] = false;
   }

var joy_x = gamepad_axis_value(0, gp_axisrh) + x;
var joy_y = gamepad_axis_value(0, gp_axisrv) + y;

var joy_x1 = gamepad_axis_value(1, gp_axisrh) + x;
var joy_y1 = gamepad_axis_value(1, gp_axisrv) + y;


wep = 1
bwep = 0
time = 0
ammo[0] = 999
ammo[1] = 50
ammo[2] = 0
ammo[3] = 0
ammo[4] = 0
owlbutt = 0
maxhealth = 8
maxspeed = 4
keeppvp = 0
level = 1
skillpoints = 0
kills = 0
cont = 0
pvp = 0
chaos = 0
if GenCont.pvp = 1
pvp = 1
else
pvp = 0
if GenCont.chaos = 1
chaos = 1
else
chaos = 0
/*while keeppvp = 1
pvp = 1*/
//while
//AREA STUFF
area = 1
subarea = 1
hard = 1

//race2 stuff
if race2 = 1
{
race = 1
if chaos = 1
maxhealth = 80
else
maxhealth = 8
spr_idle = sprMutant1Idle
spr_walk = sprMutant1Walk
spr_hurt = sprMutant1Hurt
spr_dead = sprMutant1Dead
}
if race2 = 2
{
race = 2
if chaos = 1
maxhealth = 100
else
maxhealth = 10
spr_idle = sprMutant2Idle
spr_walk = sprMutant2Walk
spr_hurt = sprMutant2Hurt
spr_dead = sprMutant2Dead
}
if race2 = 3
{
race = 3
if chaos = 1
maxhealth = 80
else
maxhealth = 8
spr_idle = sprMutant3Idle
spr_walk = sprMutant3Walk
spr_hurt = sprMutant3Hurt
spr_dead = sprMutant3Dead
}
if race2 = 4
{
race = 4
if chaos = 1
maxhealth = 30
else
maxhealth = 2
spr_idle = sprMutant4Idle
spr_walk = sprMutant4Walk
spr_hurt = sprMutant4Hurt
spr_dead = sprMutant4Dead
}
if race2 = 5
{
race = 5
if chaos = 1
maxhealth = 80
else
maxhealth = 8
spr_idle = sprMutant5Idle
spr_walk = sprMutant5Walk
spr_hurt = sprMutant5Hurt
spr_dead = sprMutant5Dead
maxspeed = 5
}
if race2 = 6
{
race = 6
if chaos = 1
maxhealth = 80
else
maxhealth = 8
spr_idle = sprMutant6Idle
spr_walk = sprMutant6Walk
spr_hurt = sprMutant6Hurt
spr_dead = sprMutant6Dead
}
if race2 = 7
{
if chaos = 1
maxhealth = 80
else
maxhealth = 8
spr_idle = sprMutant7Idle
spr_walk = sprMutant7Walk
spr_hurt = sprMutant7Hurt
spr_dead = sprMutant7Dead
maxspeed = 3
}
my_health = maxhealth


//default shit
clicked = 0
wepangle = 0
wepflip = 1
angle = 0

rad = 0
can_shoot = 1
right = 1
wepright = 1
back = 1
wave = 0
roll = 0
friction = 0.4
image_speed = 0.4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,Corpse)
{
mask_index = other.mask_index
motion_add(other.direction,other.speed)
speed += max(0,abs(other.my_health/5))
sprite_index = other.spr_dead
image_xscale = other.right
}

BackCont.kills = kills
BackCont.area = area
BackCont.subarea = subarea
BackCont.hard = hard
if race = 1
sound_play(sndMutant1Death)
if race = 2
sound_play(sndMutant2Death)
if race = 3
sound_play(sndMutant3Death)
if race = 4
sound_play(sndMutant4Death)
if race = 5
sound_play(sndMutant5Death)
if race = 6
sound_play(sndMutant6Death)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var joy_x = -gamepad_axis_value(0, gp_axisrh) * x;
var joy_y = -gamepad_axis_value(0, gp_axisrv) * y;

var joy_x1 = -gamepad_axis_value(1, gp_axisrh) * x;
var joy_y1 = -gamepad_axis_value(1, gp_axisrv) * y;

can_shoot = 1

wepflip = -wepflip

if wep_type[wep] = 2
{
with instance_create(x,y,Shell)
{
sprite_index = sprShotShell
if Player.cont = 0
motion_add(point_direction(x,y,joy_x,joy_y)+other.right*100+random(40)-20,2+random(2))
if Player.cont = 1
motion_add(point_direction(x,y,joy_x1,joy_y1)+other.right*100+random(40)-20,2+random(2))
}
sound_play(sndShotReload)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord("G"))
{
if cont != 1

cont = 1

else
cont = 0
}
var joy_x = gamepad_axis_value(0, gp_axisrh) * Player2.x;
var joy_y = gamepad_axis_value(0, gp_axisrv) * Player2.y;

var joy_x1 = gamepad_axis_value(1, gp_axisrh) * Player2.x;
var joy_y1 = gamepad_axis_value(1, gp_axisrv) * Player2.y;

if time &gt;= 30 and speedlimit = 1
{
if owlbutt = 1
{
maxspeed = 6
instance_create(x,y,Dust)
}
if owlbutt = 0
{
maxspeed = 5
instance_create(x,y,Dust)
}
}
if race = 7
{
if time = 0
{
maxspeed = 3
speedlimit = 0
}
if speedlimit = 1
time -= 1
if speedlimit = 0
time += 1
}

if cont = 0 and gamepad_is_connected(0)
{
if !place_meeting(x,y,Portal) and !instance_exists(GenCont) and !instance_exists(LevCont)
{if roll = 0
{if gamepad_axis_value(0, gp_axislh) &lt;= -.5
hspeed -= 3
if gamepad_axis_value(0, gp_axislh) &gt;= .5
hspeed += 3
if gamepad_axis_value(0, gp_axislv) &lt;= -.5
vspeed -= 3
if gamepad_axis_value(0, gp_axislv) &gt;= .5
vspeed += 3


if speed &gt; maxspeed
speed = maxspeed

if speed = 0
{if sprite_index != spr_hurt
sprite_index = spr_idle}
else
{if sprite_index != spr_hurt
sprite_index = spr_walk}
if sprite_index = spr_hurt
{if image_index &gt; 2
sprite_index = spr_idle}

if gamepad_axis_value(0, joy_x) &lt; x
right = -1
else if gamepad_axis_value(0, joy_x) &gt; x
right = 1
//if gamepad_axis_value(0, gp_axisrv) &gt;= .5 or gamepad_axis_value(0, gp_axisrv) &lt;= -.5
//joy_y = joy_y += .1
if gamepad_axis_value(0, joy_y) &lt; y
back = 1
else if gamepad_axis_value(0, joy_y) &gt; y
back = -1

if gamepad_button_check_pressed (0, gp_shoulderl)
{
if race2 = 1
{direction = point_direction(Player2.x,Player2.y,gamepad_axis_value(0, joy_x),gamepad_axis_value(0, joy_y))
speed = 4
roll = 1
sound_play(sndRoll)
instance_create(Player2.x,Player2.y,Dust)}
if race2 = 2 and !instance_exists(CrystalShieldP2)
{
if skill_got[5] = 1 and place_meeting(gamepad_axis_value(0, joy_x),gamepad_axis_value(0, joy_y),Floor) and !place_meeting(gamepad_axis_value(0, joy_x),gamepad_axis_value(0, joy_y),Wall)
{
Player2.x = gamepad_axis_value(0, joy_x)
Player2.y = gamepad_axis_value(0, joy_y)
}
instance_create(Player2.x,Player2.y,CrystalShieldP2)
}
if race2 = 4
{
with Corpse
{
if image_speed = 0 and x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview and instance_number(enemy) &gt; 0
{
if !sound_isplaying(sndCorpseExplo)
sound_play(sndCorpseExplo)

instance_destroy()
instance_create(x,y,Scorchmark)
if Player.skill_got[5] = 1
{
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
}
instance_create(x,y,MeatExplosion)
}
}
}

if race2 = 5
{
with Tangle
instance_destroy()
with TangleSeed
instance_destroy()
with instance_create(x,y,TangleSeed)
{
motion_add(point_direction(x,y,gamepad_axis_value(0, joy_x),gamepad_axis_value(0, joy_y)),12)
image_angle = direction
}
}

//O.W.L
if race = 7 and time &gt;= 50 and speedlimit = 0
{
speedlimit = 1
if Player.skill_got[5] = 1
{
time = 75
owlbutt = 1
}
else
time = 50
}
}


if gamepad_button_check (0, gp_shoulderl)
{
if race2 = 3
{

if !sound_isplaying(sndEyesLoop) sound_loop(sndEyesLoop)
if Player.pvp = 0
{
with enemy
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
}
}
with EnemyBullet1
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
}
}
}

if Player.pvp = 1
{
with Player2
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
}
}
with Bullet1
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
}
}
}

}
//poot
if race2 = 6
{
if Player.skill_got[5] = 1
{
alarm[0] *=.6
speed /=2

wep_auto[wep] = 1
}
else
{
alarm[0] *= .76
speed /=5
wep_auto[wep] = 1
}
}
//O.W.L
if race = 7
{
alarm[1] = 200
if alarm[1] &gt; 0
{
speed = 7
instance_create(x,y,Dust)
}
if Player.skill_got[5] = 1
{
maxspeed *=3
}
else
{
alarm[1] = 30
}
}


}
else if race2 = 11 and wep = 1 or wep = 1 or wep = 3 or wep = 5 or wep = 6 or wep = 7 or wep = 8 or wep = 12 or wep = 13 or wep = 14 or wep = 15
{
wep_auto[wep] = 0
}


else if sound_isplaying(sndEyesLoop) sound_stop(sndEyesLoop)
}
else
{
//rolling
speed = 6
angle += 40*right
instance_create(x+random(6)-3,y+random(6),Dust)

if angle &gt; 720 or -angle &gt; 720
{
angle = 0
roll = 0
}
}


if my_health &lt;= 0
instance_destroy()


//SHOOTING!! AWW YEAH

if !instance_exists(CrystalShield)
{

if gamepad_button_check_pressed (0, gp_shoulderr) and wep_auto[wep] = 0 and ((wep_type[wep] = 0 or wep_type[wep] = 1) or can_shoot = 1) 
clicked = 1

if ammo[wep_type[wep]] = 0 and gamepad_button_check_pressed (0, gp_shoulderr) and wep_type[wep] != 0
{
clicked = 0
sound_play(sndEmpty)
}

if can_shoot = 1 and ammo[wep_type[wep]] &gt; 0
{
if wep_auto[wep] = 0 and clicked = 1
{
scrFire1()
clicked = 0
}
if wep_auto[wep] = 1 and gamepad_button_check (0, gp_shoulderr)
scrFire1()
}
}

//SWAP DA WEPS
if (gamepad_button_check_pressed (0, gp_face4)) and bwep != 0
{
var twep;
twep = wep

wep = bwep
bwep = twep
clicked = 0

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)
}

}


if rad &gt; level*60
{
if level &lt; 9
{
sound_play(sndLevelUp)
rad -= level*60
level += 1
instance_create(x,y,LevelUp)
skillpoints += 1
}
else
rad = level*60
}
}


//Slot 2

if cont = 1 and gamepad_is_connected(1)
{
if !place_meeting(x,y,Portal) and !instance_exists(GenCont) and !instance_exists(LevCont)
{if roll = 0
{if gamepad_axis_value(1, gp_axislh) &lt;= -.5
hspeed -= 3
if gamepad_axis_value(1, gp_axislh) &gt;= .5
hspeed += 3
if gamepad_axis_value(1, gp_axislv) &lt;= -.5
vspeed -= 3
if gamepad_axis_value(1, gp_axislv) &gt;= .5
vspeed += 3


if speed &gt; maxspeed
speed = maxspeed

if speed = 0
{if sprite_index != spr_hurt
sprite_index = spr_idle}
else
{if sprite_index != spr_hurt
sprite_index = spr_walk}
if sprite_index = spr_hurt
{if image_index &gt; 2
sprite_index = spr_idle}

if gamepad_axis_value(1, joy_x) &lt; x
right = -1
else if gamepad_axis_value(1, joy_x) &gt; x
right = 1
//if gamepad_axis_value(1, gp_axisrv) &gt;= .5 or gamepad_axis_value(1, gp_axisrv) &lt;= -.5
//joy_y = joy_y += .1
if gamepad_axis_value(1, joy_y1) &lt; y
back = 1
else if gamepad_axis_value(1, joy_y1) &gt; y
back = -1

if gamepad_button_check_pressed (1, gp_shoulderl)
{
if race2 = 1
{direction = point_direction(x,y,gamepad_axis_value(1, joy_x),gamepad_axis_value(1, joy_y1))
speed = 4
roll = 1
sound_play(sndRoll)
instance_create(x,y,Dust)}
if race2 = 2 and !instance_exists(CrystalShield)
{
if skill_got[5] = 1 and place_meeting(gamepad_axis_value(1, joy_x),gamepad_axis_value(1, joy_y1),Floor) and !place_meeting(gamepad_axis_value(1, joy_x1),gamepad_axis_value(1, joy_y1),Wall)
{
x = gamepad_axis_value(1, joy_x1)
y = gamepad_axis_value(1, joy_y1)
}
instance_create(x,y,CrystalShield)
}
if race2 = 4
{
with Corpse
{
if image_speed = 0 and x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview and instance_number(enemy) &gt; 0
{
if !sound_isplaying(sndCorpseExplo)
sound_play(sndCorpseExplo)

instance_destroy()
instance_create(x,y,Scorchmark)
if Player.skill_got[5] = 1
{
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
}
instance_create(x,y,MeatExplosion)
}
}
}

if race2 = 5
{
with Tangle
instance_destroy()
with TangleSeed
instance_destroy()
with instance_create(x,y,TangleSeed)
{
motion_add(point_direction(x,y,gamepad_axis_value(1, joy_x1),gamepad_axis_value(1, joy_y1)),12)
image_angle = direction
}
}

}


if gamepad_button_check (1, gp_shoulderl)
{
if race2 = 3
{

if !sound_isplaying(sndEyesLoop) sound_loop(sndEyesLoop)

with enemy
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
}
}
with EnemyBullet1
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
}
}

}
//poot
if race2 = 6
{
if Player.skill_got[5] = 1
{
alarm[0] *=.6
speed /=2

wep_auto[wep] = 1
}
else
{
alarm[0] *= .76
speed /=5
wep_auto[wep] = 1
}
}



}
else if race2 = 11 and wep = 1 or wep = 1 or wep = 3 or wep = 5 or wep = 6 or wep = 7 or wep = 8 or wep = 12 or wep = 13 or wep = 14 or wep = 15
{
wep_auto[wep] = 0
}


else if sound_isplaying(sndEyesLoop) sound_stop(sndEyesLoop)
}
else
{
//rolling
speed = 6
angle += 40*right
instance_create(x+random(6)-3,y+random(6),Dust)

if angle &gt; 720 or -angle &gt; 720
{
angle = 0
roll = 0
}
}


if my_health &lt;= 0
instance_destroy()


//SHOOTING!! AWW YEAH

if !instance_exists(CrystalShield)
{

if gamepad_button_check_pressed (1, gp_shoulderr) and wep_auto[wep] = 0 and ((wep_type[wep] = 0 or wep_type[wep] = 1) or can_shoot = 1) 
clicked = 1

if ammo[wep_type[wep]] = 0 and gamepad_button_check_pressed (1, gp_shoulderr) and wep_type[wep] != 0
{
clicked = 0
sound_play(sndEmpty)
}

if can_shoot = 1 and ammo[wep_type[wep]] &gt; 0
{
if wep_auto[wep] = 0 and clicked = 1
{
scrFire1()
clicked = 0
}
if wep_auto[wep] = 1 and gamepad_button_check (1, gp_shoulderr)
scrFire1()
}
}

//SWAP DA WEPS
if (gamepad_button_check_pressed (1, gp_face4)) and bwep != 0
{
var twep;
twep = wep

wep = bwep
bwep = twep
clicked = 0

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)
}

}


if rad &gt; level*60
{
if level &lt; 9
{
sound_play(sndLevelUp)
rad -= level*60
level += 1
instance_create(x,y,LevelUp)
skillpoints += 1
}
else
rad = level*60
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="WepPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cont = 0
{
if gamepad_button_check_pressed(0, gp_face3)
{
if race = 7
{
sound_play(sndWeaponPickup)
wep = wep
with instance_create(other.x,other.y,WepPickup)
{
scrWeapons()
wep = other.wep
name = wep_name[wep]
sprite_index = wep_sprt[wep]
ammo = 0
bwep = 0
}
}


else
{
sound_play(sndWeaponPickup)
if bwep = 0
bwep = wep

else
{
with instance_create(other.x,other.y,WepPickup)
{
scrWeapons()
wep = other.wep
name = wep_name[wep]
sprite_index = wep_sprt[wep]
ammo = 0
}
}
}

wep = other.wep

dir = instance_create(x,y,PopupText)
dir.mytext = string(wep_name[wep])+"!"

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)

with other
instance_destroy()
}
}
if cont = 1
{
if gamepad_button_check_pressed(1, gp_face3)
{
sound_play(sndWeaponPickup)
if bwep = 0
bwep = wep
else
{
with instance_create(other.x,other.y,WepPickup)
{
scrWeapons()
wep = other.wep
name = wep_name[wep]
sprite_index = wep_sprt[wep]
ammo = 0
}
}

wep = other.wep

dir = instance_create(x,y,PopupText)
dir.mytext = string(wep_name[wep])+"!"

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)

with other
instance_destroy()
}
}
if other.ammo &gt; 0 and wep_type[other.wep] != 0
{
ammo[wep_type[other.wep]] += typ_ammo[other.wep_type[other.wep]]*2
if ammo[wep_type[other.wep]] &gt; typ_amax[other.wep_type[other.wep]]
ammo[wep_type[other.wep]] = typ_amax[other.wep_type[other.wep]]


dir = instance_create(x,y,PopupText)
dir.mytext = "+"+string(typ_ammo[wep_type[other.wep]]*2)+" "+string(typ_name[wep_type[other.wep]])

other.ammo = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Event = " + async_load[? "event_type"]);        // Debug cocde so you can see which event has been
show_debug_message("Pad = " + string(async_load[? "pad_index"]));   // triggered and the pad associated with it.

switch(async_load[? "event_type"])             // Parse the async_load map to see which event has been triggered
{
case "gamepad discovered":                     // A game pad has been discovered
    var pad = async_load[? "pad_index"];       // Get the pad index value from the async_load map
    gamepad_set_axis_deadzone(pad, 0.5);       // Set the "deadzone" for the axis
    gamepad_set_button_threshold(pad, 0.1);    // Set the "threshold" for the triggers
    if !(instance_exists(player[pad]))         // Check to see if an instance is associated with this pad index
        {
        // Create a player object and assign it a pad number
        player[pad] = instance_create(64 + random(room_width - 128), 64 + random(room_height - 128), obj_Player);
        with (player[pad])
            {
            image_index = pad;
            pad_num = pad;
            }
        }
    break;
case "gamepad lost":                           // Gamepad has been removed or otherwise disabled
    var pad = async_load[? "pad_index"];       // Get the pad index
    if (instance_exists(player[pad]))          // Check for a player instance associated with the pad and remove it
        {
        with (player[pad])
            {
            instance_destroy();
            }
        player[pad] = noone;                   // Set the controller array to "noone" so it detects a new pad being connected
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if subarea &lt; 3
subarea += 1
else
{
if area &lt; 3
area += 1
else
area = 1
subarea = 1
}

hard += 1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var joy_x = gamepad_axis_value(0, gp_axisrh) * x;
var joy_y = gamepad_axis_value(0, gp_axisrv) * y;

var joy_x2 = gamepad_axis_value(1, gp_axisrh) * x;
var joy_y2 = gamepad_axis_value(1, gp_axisrv) * y;

if wep_type[wep] = 0
wepright = wepflip
else
wepright = right

if wep_type[wep] = 3
{
if Player.cont = 0
{
lasx = x
lasy = y
do {lasx += lengthdir_x(2,point_direction(x,y,joy_x,joy_y)) lasy += lengthdir_y(2,point_direction(x,y,joy_x,joy_y))}
until position_meeting(lasx,lasy,Wall)

draw_sprite_ext(sprLaserSight,-1,x,y,point_distance(x,y,lasx,lasy)/2+2,1,point_direction(x,y,joy_x,joy_y),c_white,1)
}

if Player.cont = 1
{
lasx = x
lasy = y
do {lasx += lengthdir_x(2,point_direction(x,y,joy_x2,joy_y2)) lasy += lengthdir_y(2,point_direction(x,y,joy_x2,joy_y2))}
until position_meeting(lasx,lasy,Wall)

draw_sprite_ext(sprLaserSight,-1,x,y,point_distance(x,y,lasx,lasy)/2+2,1,point_direction(x,y,joy_x2,joy_y2),c_white,1)
}
}
if Player.cont = 0
{
if back = 1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,joy_x,joy_y)+wepangle,c_white,1)
draw_sprite_ext(sprite_index,-1,x,y,right,1,angle,c_white,1)
if back = -1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,joy_x,joy_y)+wepangle,c_white,1)
}

if Player.cont = 1
{
if back = 1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,joy_x2,joy_y2)+wepangle,c_white,1)
draw_sprite_ext(sprite_index,-1,x,y,right,1,angle,c_white,1)
if back = -1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,joy_x2,joy_y2)+wepangle,c_white,1)
}

if race2 = 3 and mouse_check_button(mb_right) or gamepad_button_check_pressed(0, gp_shoulderl) and race2 = 3
draw_sprite_ext(sprMindPower,wave*0.4,x,y,right,1,0,c_white,1)
if Player.cont = 0 and gamepad_button_check_pressed(0, gp_shoulderl) and race2 = 3
wave += 1
if Player.cont = 1 and gamepad_button_check_pressed(1, gp_shoulderl) and race2 = 3
wave += 1

if (window_get_fullscreen())
{
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
